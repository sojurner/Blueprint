// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LystForm should match snapshot 1`] = `
<LystForm
  handleChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "search",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  inputList={
    Array [
      Object {
        "iconDetails": Object {
          "iconName": "Search",
          "position": "start",
          "root": "endAdornment",
          "variant": "Rounded",
        },
        "inputProps": Object {
          "label": "Search Icons",
          "name": "search",
          "styles": "margin: 1rem",
          "variant": "standard",
        },
      },
    ]
  }
  values={
    Object {
      "search": "",
    }
  }
>
  <WithStyles(ForwardRef(FormControl))>
    <ForwardRef(FormControl)
      classes={
        Object {
          "fullWidth": "MuiFormControl-fullWidth",
          "marginDense": "MuiFormControl-marginDense",
          "marginNormal": "MuiFormControl-marginNormal",
          "root": "MuiFormControl-root",
        }
      }
    >
      <div
        className="MuiFormControl-root"
      >
        <LystInput
          inputProps={
            Object {
              "InputProps": Object {
                "endAdornment": <ForwardRef(WithStyles)
                  position="start"
                >
                  <LystIcon
                    iconName="Search"
                    variant="Rounded"
                  />
                </ForwardRef(WithStyles)>,
              },
              "id": "input-0",
              "label": "Search Icons",
              "name": "search",
              "onChange": undefined,
              "styles": "margin: 1rem",
              "value": "",
              "variant": "standard",
            }
          }
          key="input-key-0"
        >
          <Styled(WithStyles(ForwardRef(TextField)))
            InputProps={
              Object {
                "endAdornment": <ForwardRef(WithStyles)
                  position="start"
                >
                  <LystIcon
                    iconName="Search"
                    variant="Rounded"
                  />
                </ForwardRef(WithStyles)>,
              }
            }
            id="input-0"
            label="Search Icons"
            name="search"
            styles="margin: 1rem"
            value=""
            variant="standard"
          >
            <WithStyles(ForwardRef(TextField))
              InputProps={
                Object {
                  "endAdornment": <ForwardRef(WithStyles)
                    position="start"
                  >
                    <LystIcon
                      iconName="Search"
                      variant="Rounded"
                    />
                  </ForwardRef(WithStyles)>,
                }
              }
              className="sc-bwzfXH gQSKAL"
              id="input-0"
              label="Search Icons"
              name="search"
              styles="margin: 1rem"
              value=""
              variant="standard"
            >
              <ForwardRef(TextField)
                InputProps={
                  Object {
                    "endAdornment": <ForwardRef(WithStyles)
                      position="start"
                    >
                      <LystIcon
                        iconName="Search"
                        variant="Rounded"
                      />
                    </ForwardRef(WithStyles)>,
                  }
                }
                className="sc-bwzfXH gQSKAL"
                classes={
                  Object {
                    "root": "MuiTextField-root",
                  }
                }
                id="input-0"
                label="Search Icons"
                name="search"
                styles="margin: 1rem"
                value=""
                variant="standard"
              >
                <WithStyles(ForwardRef(FormControl))
                  className="MuiTextField-root sc-bwzfXH gQSKAL"
                  required={false}
                  styles="margin: 1rem"
                  variant="standard"
                >
                  <ForwardRef(FormControl)
                    className="MuiTextField-root sc-bwzfXH gQSKAL"
                    classes={
                      Object {
                        "fullWidth": "MuiFormControl-fullWidth",
                        "marginDense": "MuiFormControl-marginDense",
                        "marginNormal": "MuiFormControl-marginNormal",
                        "root": "MuiFormControl-root",
                      }
                    }
                    required={false}
                    styles="margin: 1rem"
                    variant="standard"
                  >
                    <div
                      className="MuiFormControl-root MuiTextField-root sc-bwzfXH gQSKAL"
                      styles="margin: 1rem"
                    >
                      <WithStyles(WithFormControlContext(ForwardRef(InputLabel)))
                        htmlFor="input-0"
                      >
                        <WithFormControlContext(ForwardRef(InputLabel))
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated",
                              "asterisk": "MuiInputLabel-asterisk",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "filled": "MuiInputLabel-filled",
                              "focused": "Mui-focused",
                              "formControl": "MuiInputLabel-formControl",
                              "marginDense": "MuiInputLabel-marginDense",
                              "outlined": "MuiInputLabel-outlined",
                              "required": "Mui-required",
                              "root": "MuiInputLabel-root",
                              "shrink": "MuiInputLabel-shrink",
                            }
                          }
                          htmlFor="input-0"
                        >
                          <ForwardRef(InputLabel)
                            classes={
                              Object {
                                "animated": "MuiInputLabel-animated",
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "filled": "MuiInputLabel-filled",
                                "focused": "Mui-focused",
                                "formControl": "MuiInputLabel-formControl",
                                "marginDense": "MuiInputLabel-marginDense",
                                "outlined": "MuiInputLabel-outlined",
                                "required": "Mui-required",
                                "root": "MuiInputLabel-root",
                                "shrink": "MuiInputLabel-shrink",
                              }
                            }
                            htmlFor="input-0"
                            muiFormControl={
                              Object {
                                "adornedStart": false,
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "margin": "none",
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "required": false,
                                "variant": "standard",
                              }
                            }
                          >
                            <WithStyles(WithFormControlContext(ForwardRef(FormLabel)))
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                              classes={
                                Object {
                                  "asterisk": "MuiInputLabel-asterisk",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "required": "Mui-required",
                                }
                              }
                              data-shrink={false}
                              htmlFor="input-0"
                            >
                              <WithFormControlContext(ForwardRef(FormLabel))
                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                classes={
                                  Object {
                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "filled": "MuiFormLabel-filled",
                                    "focused": "Mui-focused Mui-focused",
                                    "required": "Mui-required Mui-required",
                                    "root": "MuiFormLabel-root",
                                  }
                                }
                                data-shrink={false}
                                htmlFor="input-0"
                              >
                                <ForwardRef(FormLabel)
                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                  classes={
                                    Object {
                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                      "disabled": "Mui-disabled Mui-disabled",
                                      "error": "Mui-error Mui-error",
                                      "filled": "MuiFormLabel-filled",
                                      "focused": "Mui-focused Mui-focused",
                                      "required": "Mui-required Mui-required",
                                      "root": "MuiFormLabel-root",
                                    }
                                  }
                                  data-shrink={false}
                                  htmlFor="input-0"
                                  muiFormControl={
                                    Object {
                                      "adornedStart": false,
                                      "disabled": false,
                                      "error": false,
                                      "filled": false,
                                      "focused": false,
                                      "margin": "none",
                                      "onBlur": [Function],
                                      "onEmpty": [Function],
                                      "onFilled": [Function],
                                      "onFocus": [Function],
                                      "required": false,
                                      "variant": "standard",
                                    }
                                  }
                                >
                                  <label
                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                    data-shrink={false}
                                    htmlFor="input-0"
                                  >
                                    Search Icons
                                  </label>
                                </ForwardRef(FormLabel)>
                              </WithFormControlContext(ForwardRef(FormLabel))>
                            </WithStyles(WithFormControlContext(ForwardRef(FormLabel)))>
                          </ForwardRef(InputLabel)>
                        </WithFormControlContext(ForwardRef(InputLabel))>
                      </WithStyles(WithFormControlContext(ForwardRef(InputLabel)))>
                      <WithStyles(ForwardRef(Input))
                        endAdornment={
                          <ForwardRef(WithStyles)
                            position="start"
                          >
                            <LystIcon
                              iconName="Search"
                              variant="Rounded"
                            />
                          </ForwardRef(WithStyles)>
                        }
                        id="input-0"
                        name="search"
                        value=""
                      >
                        <ForwardRef(Input)
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "multiline": "MuiInput-multiline",
                              "root": "MuiInput-root",
                              "underline": "MuiInput-underline",
                            }
                          }
                          endAdornment={
                            <ForwardRef(WithStyles)
                              position="start"
                            >
                              <LystIcon
                                iconName="Search"
                                variant="Rounded"
                              />
                            </ForwardRef(WithStyles)>
                          }
                          id="input-0"
                          name="search"
                          value=""
                        >
                          <WithStyles(ForwardRef(InputBase))
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "multiline": "MuiInput-multiline",
                                "root": "MuiInput-root MuiInput-underline",
                                "underline": null,
                              }
                            }
                            endAdornment={
                              <ForwardRef(WithStyles)
                                position="start"
                              >
                                <LystIcon
                                  iconName="Search"
                                  variant="Rounded"
                                />
                              </ForwardRef(WithStyles)>
                            }
                            fullWidth={false}
                            id="input-0"
                            inputComponent="input"
                            multiline={false}
                            name="search"
                            type="text"
                            value=""
                          >
                            <ForwardRef(InputBase)
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused",
                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                  "input": "MuiInputBase-input MuiInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                }
                              }
                              endAdornment={
                                <ForwardRef(WithStyles)
                                  position="start"
                                >
                                  <LystIcon
                                    iconName="Search"
                                    variant="Rounded"
                                  />
                                </ForwardRef(WithStyles)>
                              }
                              fullWidth={false}
                              id="input-0"
                              inputComponent="input"
                              multiline={false}
                              name="search"
                              type="text"
                              value=""
                            >
                              <div
                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                onClick={[Function]}
                              >
                                <input
                                  aria-invalid={false}
                                  className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                  disabled={false}
                                  id="input-0"
                                  name="search"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  type="text"
                                  value=""
                                />
                                <WithStyles(WithFormControlContext(ForwardRef(InputAdornment)))
                                  position="start"
                                >
                                  <WithFormControlContext(ForwardRef(InputAdornment))
                                    classes={
                                      Object {
                                        "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                        "filled": "MuiInputAdornment-filled",
                                        "positionEnd": "MuiInputAdornment-positionEnd",
                                        "positionStart": "MuiInputAdornment-positionStart",
                                        "root": "MuiInputAdornment-root",
                                      }
                                    }
                                    position="start"
                                  >
                                    <ForwardRef(InputAdornment)
                                      classes={
                                        Object {
                                          "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                          "filled": "MuiInputAdornment-filled",
                                          "positionEnd": "MuiInputAdornment-positionEnd",
                                          "positionStart": "MuiInputAdornment-positionStart",
                                          "root": "MuiInputAdornment-root",
                                        }
                                      }
                                      muiFormControl={
                                        Object {
                                          "adornedStart": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "margin": "none",
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "required": false,
                                          "variant": "standard",
                                        }
                                      }
                                      position="start"
                                    >
                                      <div
                                        className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                      >
                                        <LystIcon
                                          iconName="Search"
                                          variant="Rounded"
                                        >
                                          <Suspense
                                            fallback={<ForwardRef(WithStyles) />}
                                          >
                                            <lazy />
                                            <WithStyles(ForwardRef(CircularProgress))>
                                              <ForwardRef(CircularProgress)
                                                classes={
                                                  Object {
                                                    "circle": "MuiCircularProgress-circle",
                                                    "circleDisableShrink": "MuiCircularProgress-circleDisableShrink",
                                                    "circleIndeterminate": "MuiCircularProgress-circleIndeterminate",
                                                    "circleStatic": "MuiCircularProgress-circleStatic",
                                                    "colorPrimary": "MuiCircularProgress-colorPrimary",
                                                    "colorSecondary": "MuiCircularProgress-colorSecondary",
                                                    "indeterminate": "MuiCircularProgress-indeterminate",
                                                    "root": "MuiCircularProgress-root",
                                                    "static": "MuiCircularProgress-static",
                                                    "svg": "MuiCircularProgress-svg",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiCircularProgress-root MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
                                                  role="progressbar"
                                                  style={
                                                    Object {
                                                      "height": 40,
                                                      "width": 40,
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    className="MuiCircularProgress-svg"
                                                    viewBox="22 22 44 44"
                                                  >
                                                    <circle
                                                      className="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                                                      cx={44}
                                                      cy={44}
                                                      fill="none"
                                                      r={20.2}
                                                      strokeWidth={3.6}
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </div>
                                              </ForwardRef(CircularProgress)>
                                            </WithStyles(ForwardRef(CircularProgress))>
                                          </Suspense>
                                        </LystIcon>
                                      </div>
                                    </ForwardRef(InputAdornment)>
                                  </WithFormControlContext(ForwardRef(InputAdornment))>
                                </WithStyles(WithFormControlContext(ForwardRef(InputAdornment)))>
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(Input)>
                      </WithStyles(ForwardRef(Input))>
                    </div>
                  </ForwardRef(FormControl)>
                </WithStyles(ForwardRef(FormControl))>
              </ForwardRef(TextField)>
            </WithStyles(ForwardRef(TextField))>
          </Styled(WithStyles(ForwardRef(TextField)))>
        </LystInput>
      </div>
    </ForwardRef(FormControl)>
  </WithStyles(ForwardRef(FormControl))>
</LystForm>
`;
